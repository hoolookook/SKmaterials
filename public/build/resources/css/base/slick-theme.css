@charset "UTF-8";
.fixed {
	/* the class that will be applied */
	position: fixed;
	bottom: 0;
}

/* Slider */
.slick-loading .slick-list {
	background: #fff center center no-repeat;
}

/* Icons */
@font-face {
	font-family: "slick";
	src: url("./fonts/slick.eot");
	src: url("./fonts/slick.eot?#iefix") format("embedded-opentype"), url("./fonts/slick.svg#slick") format("svg");
	font-weight: normal;
	font-style: normal;
}
/* Arrows */
.slick-prev,
.slick-next {
	position: absolute;
	display: block;
	height: 20px;
	width: 20px;
	line-height: 0px;
	font-size: 0px;
	cursor: pointer;
	background: transparent;
	color: transparent;
	top: 50%;
	-webkit-transform: translate(0, -50%);
	-ms-transform: translate(0, -50%);
	transform: translate(0, -50%);
	padding: 0;
	border: none;
	outline: none;
}
.slick-prev:hover, .slick-prev:focus,
.slick-next:hover,
.slick-next:focus {
	outline: none;
	background: transparent;
	color: transparent;
}
.slick-prev:hover:before, .slick-prev:focus:before,
.slick-next:hover:before,
.slick-next:focus:before {
	opacity: 1;
}
.slick-prev.slick-disabled:before,
.slick-next.slick-disabled:before {
	opacity: 1;
}
.slick-prev:before,
.slick-next:before {
	font-family: "slick";
	font-size: 20px;
	line-height: 1;
	color: white;
	opacity: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.slick-prev {
	left: -25px;
}
[dir=rtl] .slick-prev {
	left: auto;
	right: -25px;
}
.slick-prev:before {
	content: "←";
}
[dir=rtl] .slick-prev:before {
	content: "→";
}

.slick-next {
	right: -25px;
}
[dir=rtl] .slick-next {
	left: -25px;
	right: auto;
}
.slick-next:before {
	content: "→";
}
[dir=rtl] .slick-next:before {
	content: "←";
}

/* Dots */
.slick-dotted.slick-slider {
	margin-bottom: 30px;
}

.slick-dots {
	position: absolute;
	top: none;
	right: none;
	bottom: 200px;
	left: 50%;
	transform: translate(-50%);
	height: auto;
	max-width: 1170px;
	width: 100%;
	z-index: 1;
	display: flex;
	column-gap: 40px;
}
.slick-dots .progressBar {
	box-sizing: border-box;
	width: 60px;
	height: 2px;
	background-color: #ccc;
	position: absolute;
	left: 25px;
	top: 9px;
}
.slick-dots .progressBar .line {
	width: 60px;
	height: 2px;
	background-color: #fff;
	animation: slidein 16s;
}
.slick-dots li {
	position: relative;
	display: inline-block;
	cursor: pointer;
}
.slick-dots li button {
	border: 0;
	background: transparent;
	display: block;
	height: 20px;
	outline: none;
	line-height: 0px;
	font-size: 0px;
	color: transparent;
	cursor: pointer;
}
.slick-dots li button:hover, .slick-dots li button:focus {
	outline: none;
}
.slick-dots li button:hover:before, .slick-dots li button:focus:before {
	opacity: 1;
}
.slick-dots li button::before {
	position: absolute;
	top: 0;
	left: 0;
	font-family: "slick";
	font-size: 16px;
	line-height: 20px;
	color: white;
	opacity: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
.slick-dots li:nth-child(1) button::before {
	content: "01";
}
.slick-dots li:nth-child(2) button::before {
	content: "02";
}
.slick-dots li:nth-child(3) button::before {
	content: "03";
}
.slick-dots li.slick-active button::before {
	color: white;
	opacity: 1;
}
.slick-dots li.slick-active button {
	padding-right: 60px;
}

@keyframes slidein {
	from {
		width: 0%;
	}
	to {
		width: 100%;
	}
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
